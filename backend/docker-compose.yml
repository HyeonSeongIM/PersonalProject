services:
  main-server:
    image: hyeonseong1010/personal:latest
    container_name: backend-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - app-network
    volumes:
      - ./app-data:/app/data

  mysql:
    image: mysql:8.0
    container_name: mysql-service
    ports:
      - "33306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql

  minio:
    image: minio/minio:latest
    container_name: minio-service
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.0
    restart: unless-stopped
    container_name: elasticsearch-service
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    command: >
      bash -c '
        bin/elasticsearch-plugin install analysis-nori || true;
        /usr/local/bin/docker-entrypoint.sh elasticsearch
      '
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network

  redis:
    image: redis
    container_name: redis-service
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis-service:/data
      - ./data/redis-service/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - app-network

networks:
  app-network:

volumes:
  minio_data:
  mysql_data: